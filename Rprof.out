sample.interval=20000
"get" "getNamespaceInfo" "getInternalExportName" "getExportedValue" "::" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"match" "%in%" "factor" "table" "summaryRprof" 
"gzfile" "readRDS" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"gzfile" "readRDS" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"ls" "getNamespaceExports" "namespaceImportFrom" "namespaceImport" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"gzfile" "readRDS" "lazyLoadDBexec" "lazyLoad" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"ls" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"lazyLoadDBfetch" "get" "getPackageName" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"match.fun" "sapply" "is.factor" "sort.list" ".recacheSubclasses" ".cacheClass" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"topenv" ".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"match" "elNamed" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" "get" "objects" ".mergeMethodsTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"lazyLoadDBfetch" "<Anonymous>" "lazyLoadDBfetch" ".Call" ".getGeneric" "getGeneric" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"match" "possibleExtends" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"match" "%in%" ".getGeneric" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"topenv" ".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
".Call" ".identC" "is" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"exists" ".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"exists" ".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"Recall" "cacheGenericsMetaData" "Recall" "cacheGenericsMetaData" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"objects" "<Anonymous>" "unique" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"getClassDef" "is" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"as.list" "vapply" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"file" "parse" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"lazyLoadDBfetch" "get" "registerS3methods" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"asNamespace" "getNamespaceInfo" "getNamespaceImports" "addImports" "namespaceImportFrom" "namespaceImport" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"is.factor" "unique.default" "unique" "makeImportExportNames" "namespaceExport" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"file" "parse" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"file" "parse" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"%in%" "structure" ".POSIXct" "Sys.time" "initDefaultClusterOptions" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"importIntoEnv" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"file" "parse" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"gzfile" "readRDS" "lazyLoadDBexec" "lazyLoad" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"lazyLoadDBfetch" "get" "registerS3methods" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getNamespace" "asNamespace" "getExportedValue" "::" 
"read.dcf" "as.list" "load_pkg_description" "as.package" "<Anonymous>" 
"file" "parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"structure" "parseDirective" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"file.exists" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "requireNamespace" "<Anonymous>" "mapply" "load_depends" "<Anonymous>" 
"gzfile" "readRDS" "lazyLoadDBexec" "lazyLoad" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "requireNamespace" "<Anonymous>" "mapply" "load_depends" "<Anonymous>" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "requireNamespace" "<Anonymous>" "mapply" "load_depends" "<Anonymous>" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "requireNamespace" "<Anonymous>" "mapply" "load_depends" "<Anonymous>" 
"lazyLoadDBfetch" "get" "getPackageName" "<Anonymous>" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "requireNamespace" "<Anonymous>" "mapply" "load_depends" "<Anonymous>" 
"objects" "<Anonymous>" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "requireNamespace" "<Anonymous>" "mapply" "load_depends" "<Anonymous>" 
"gzfile" "readRDS" "lazyLoadDBexec" "lazyLoad" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "requireNamespace" "<Anonymous>" "mapply" "load_depends" "<Anonymous>" 
"file.exists" "find.package" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"readRDS" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"gzfile" "readRDS" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "load_depends" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"sys.call" "match" "%in%" "[.data.frame" "[" "srcfilecopy" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"length" "length" "<Anonymous>" 
"stopifnot" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"file" "readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"paste" "FUN" "apply" "unique.matrix" "unique" "parseNamespaceFile" "parse_ns_file" "load_dll" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"objects" "getClasses.default" "getClasses" "remove_s4_classes" "unload" "<Anonymous>" 
"c" "parseDirective" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_exports" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_exports" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_exports" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_exports" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_exports" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"gsub" ".rs.getSignature" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"file.exists" ".packages" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"file.exists" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"file.exists" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"file.exists" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"file.exists" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"gzfile" "readRDS" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"any" "apply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"file.exists" "FUN" "lapply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"rbind" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"gzfile" "readRDS" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"unlist" "apply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
".POSIXct" "file.info" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"structure" ".POSIXct" "file.info" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"readRDS" "FUN" "lapply" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"structure" ".POSIXct" "file.info" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"file.exists" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"structure" ".POSIXct" "file.info" "find.package" "system.file" "library" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"list.files" "matrix" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"file.access" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"file.exists" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"file.path" "file.exists" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"options" "getOption" "gzfile" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"gzfile" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"close" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" ".readPkgDesc" "installed.packages" "as.data.frame" "<Anonymous>" 
"[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"[[" "[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"length" "[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"match" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"match" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"structure" "[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"[[" "[.data.frame" "[" "subset.data.frame" "subset" ".rs.packageVersion" "<Anonymous>" 
"match" "%in%" "deparse" "eval" "match.arg" "packageEvent" "exists" "getHook" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" "detach.default" "detach" 
"gzfile" "read.dcf" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"srcfilecopy" "parse" "parseNamespaceFile" "parse_ns_file" "load_dll" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"matrix" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"match" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"grepl" "<Anonymous>" "<Anonymous>" 
"ls" "loadedNamespaces" "match" "%in%" "is_loaded" "ns_env" "parent.env" "imports_env" "assign" "insert_shims" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"file" "parse" "parseNamespaceFile" "parse_ns_file" "register_s3" "<Anonymous>" 
"ls" "setup_ns_exports" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"max" "new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sum" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.vector" "match_to_matrix" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"nchar" "parent.env.to.store" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".Call" "structure" "object.size" "<Anonymous>" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_locate" "str.locate.first" "str.left.of" "check_string" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"dir" "headers" "mtime" "needs_compile" "compile_dll" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parseDirective" "parseNamespaceFile" "parse_ns_file" "load_dll" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"FUN" "lapply" "unlist" "importIntoEnv" "export_ns" "<Anonymous>" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"cat" "source" 
"gsub" ".rs.getSignature" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"grepl" "<Anonymous>" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"grepl" "srcfilecopy" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"file.info" "srcfilecopy" "parse" "parseNamespaceFile" "parse_ns_file" "register_s3" "<Anonymous>" 
".mergeExportMethods" "namespaceExport" "withCallingHandlers" "suppressWarnings" "setup_ns_exports" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "unique" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"nchar" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"grepl" "which" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"regexpr" "do.call" "re_call" "str_locate" "str.locate.first" "str.left.of" "check_string" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste" "paste0" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "paste" "paste0" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"c" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"lazyLoadDBfetch" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"..getNamespace" "lazyLoadDBfetch" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"as.environment" "copy.fun" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"environmentName" "nchar" "parent.env.to.store" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"[<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
".Call" ".rs.enqueClientEvent" ".rs.recordTraceback" "<Anonymous>" "parse" "as.list" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env.to.store" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sum" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate" "str.locate.first" "str.left.of" "check_string" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"mode" "match" "%in%" "deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" ".deparseOpts" "deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unique" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"names" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.integer" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"names" "names" "data.frame" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"match" "%in%" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"match" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.r" "create.empty.ps" 
"lapply" "unlist" "apply" "find.package" "library" "create.stud.ps.rmd" "create.empty.ps" 
"gzfile" "readRDS" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"gzfile" "readRDS" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"grepl" ".make_numeric_version" "numeric_version" "as.numeric_version" "do.call" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"file" "parse" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"paste" "registerS3methods" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "create.stud.ps.rmd" "create.empty.ps" 
"objects" "match" "checkConflicts" "library" "create.stud.ps.rmd" "create.empty.ps" 
"objects" "match" "checkConflicts" "library" "create.stud.ps.rmd" "create.empty.ps" 
"objects" "match" "checkConflicts" "library" "create.stud.ps.rmd" "create.empty.ps" 
"FUN" "lapply" "unlist" "Filter" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"writeLines" "create.stud.ps.rmd" "create.empty.ps" 
"FUN" "lapply" ".rs.recordTraceback" "<Anonymous>" "paste0" "zip.submit.footer.txt" "paste" "paste0" "eval" "eval" "withVisible" "source" 
"read.dcf" "as.list" "load_pkg_description" "as.package" "<Anonymous>" 
"Sys.getenv" "set_envvar" "compile_dll" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"grepl" "srcfilecopy" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parseNamespaceFile" "parse_ns_file" "register_s3" "<Anonymous>" 
"unique" "parseNamespaceFile" "parse_ns_file" "load_dll" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"c" "do.call" "unique.matrix" "unique" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"check_string" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
":" "stopifnot" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"max" "substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unique.default" "unique" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"identical" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match_to_matrix" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"names" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "fixed" "check_pattern" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"exists" "get.restore.point.options" "is.storing" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env.to.store" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
":" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
":" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
":" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
":" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
":" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!=" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "paste" "paste0" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"identical" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"exists" "get.restore.point.options" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"nchar" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.nframe" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unique" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env.to.store" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"length" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"max" "new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sum" ".deparseOpts" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get.ignore" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"readLines" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"NextMethod" "Ops.factor" "==" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"names" "match" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"strsplit" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"literal_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "as.list" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"save" "save.binary.ps" "init.problem.set" "create.empty.ps" 
"paste0" "paste0" "create.stud.ps.r" "create.empty.ps" 
"seq.default" "seq" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"paste" "do.call" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"objects" "getClasses.default" "getClasses" "remove_s4_classes" "unload" "<Anonymous>" 
"FUN" "lapply" "load_depends" "<Anonymous>" 
"file" "readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "parseNamespaceFile" "parse_ns_file" "register_s3" "<Anonymous>" 
"match" "%in%" "namespaceExport" "withCallingHandlers" "suppressWarnings" "setup_ns_exports" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"structure" ".POSIXct" "file.info" "srcfilecopy" "parse" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.na" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.integer" "substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!=" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.na" "Filter" "compact" "do.call" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!=" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"restore.point" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr<-" "store.objects" "restore.point" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.list" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"readLines" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"match" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$" "gsub" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"names" "names" "[.data.frame" "[" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"get.restore.point.options" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"save" "save.binary.ps" "init.problem.set" "create.empty.ps" 
"tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.rmd" "create.empty.ps" 
"grepl" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"writeLines" "create.stud.ps.rmd" "create.empty.ps" 
"isNamespace" "asNamespace" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "<Anonymous>" 
"parseDirective" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"file.info" "srcfilecopy" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"file" "readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"duplicated" "parseNamespaceFile" "parse_ns_file" "register_s3" "<Anonymous>" 
"match" "%in%" "structure" "parseDirective" "parseNamespaceFile" "parse_ns_file" "setup_ns_exports" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"as.data.frame" "data.frame" "extract.command" "create.struc" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "paste0" "deparse1" "hint.name.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "unique" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"|" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.character" "check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env.to.store" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.storing" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"names" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_locate" "str.locate.first" "str.left.of" "check_string" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.function" "match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"exists" "get.restore.point.options" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"levels" "noNA.levels" "Ops.factor" "==" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"as.list" "data.frame" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "removeComments" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"save" "save.binary.ps" "init.problem.set" "create.empty.ps" 
"store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.rmd" "create.empty.ps" 
"paste" "do.call" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"paste" "do.call" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"basename" "<Anonymous>" "sort" "<Anonymous>" 
"file.exists" "FUN" "lapply" "unlist" "unique" "assign" "<Anonymous>" "sort" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "unlist" "unique" "assign" "<Anonymous>" "sort" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "unlist" "unique" "assign" "<Anonymous>" "sort" "<Anonymous>" 
"gzfile" "readRDS" "FUN" "lapply" "unlist" "unique" "assign" "<Anonymous>" "sort" "<Anonymous>" 
"unlist" "unique" "assign" "<Anonymous>" "sort" "<Anonymous>" 
"index.search" "help" "<Anonymous>" 
"lazyLoadDBfetch" "get" "print" "<Anonymous>" 
"gzfile" "readRDS" "index.search" "help" "<Anonymous>" 
"getFromFrame" "<Anonymous>" "lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "<Anonymous>" "<Anonymous>" "prepare_Rd" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"as.list" "lapply" "sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"writeLinesUTF8" "of0" "leavePara" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"enterPara" "writeLR" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"match" "%in%" "structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"close.connection" "close" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "<Anonymous>" "<Anonymous>" "prepare_Rd" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"sapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"match" "%in%" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grepl" "ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"paste0" "writeLines" "writeLinesUTF8" "of0" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"[" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"gzfile" "readRDS" "index.search" "help" "<Anonymous>" 
"readRDS" "index.search" "help" "<Anonymous>" 
"readRDS" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"getFromFrame" "<Anonymous>" "lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "<Anonymous>" "<Anonymous>" "prepare_Rd" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"isTRUE" "enterPara" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"writeLines" "writeLinesUTF8" "of0" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"character" "find.package" "system.file" "library" 
"exists" "dynGet" "loadingNamespaceInfo" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"importIntoEnv" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"readRDS" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.null" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"mode" "match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"-" "deparse" "paste0" "deparse1" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"grepl" "which" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.null" "case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!" "check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"max" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"exists" "get.restore.point.options" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"copy.fun" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.storing" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "as.list" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"grep" "[<-.factor" "[<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"names" "names" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"attr<-" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"levels" "[.factor" "[" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.r" "create.empty.ps" 
"grep" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"grepl" "is_blank" "strip_white" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "ifelse" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unique" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.factor" "unique.default" "unique" "simplify2array" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"max" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!=" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.storing" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"names" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.storing" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"names" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "pmatch" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"writeLines" "create.struc" 
"check_string" "str_trim" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "as.list" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"as.list" "data.frame" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"save" "save.binary.ps" "init.problem.set" "create.empty.ps" 
"eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.rmd" "create.empty.ps" 
">" "FUN" "lapply" "unlist" "Filter" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"writeLines" "create.stud.ps.rmd" "create.empty.ps" 
"unlist" "data.frame" "extract.command" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env.to.store" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "paste" "paste0" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"getExportedValue" "::" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr<-" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sum" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "paste" "paste0" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"close" "writeLines" "create.struc" 
"objects" "getClasses.default" "getClasses" "remove_s4_classes" "unload" "<Anonymous>" 
"grepl" "parse_deps" "load_depends" "<Anonymous>" 
"file" "readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"options" "getOption" "file" "readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"ls" "loadedNamespaces" "match" "%in%" "is_loaded" "ns_env" "run_user_hook" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"file" "parse" "parseNamespaceFile" "parse_ns_file" "export_ns" "<Anonymous>" 
"FUN" "lapply" "create.struc" 
"attr<-" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sum" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "is.assignment" "hint.name.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"exists" "get.restore.point.options" "is.storing" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.logical" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!" "check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sum" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "all.names" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "paste" "paste0" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "deparse" "paste" "paste0" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!=" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"max" "new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"writeLines" "create.struc" 
"data.frame" "extract.command" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"sub" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"strsplit" "tag2delim" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"pmatch" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"save" "save.binary.ps" "init.problem.set" "create.empty.ps" 
"paste0" "paste0" "create.stud.ps.r" "create.empty.ps" 
"$" "paste0" "create.stud.ps.rmd" "create.empty.ps" 
"is_blank" "strip_white" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"<Anonymous>" "<Anonymous>" 
"dim" "[.data.frame" "[" "srcfilecopy" "parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"length" "[.data.frame" "[" "srcfilecopy" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"file.exists" "parseNamespaceFile" "parse_ns_file" "register_s3" "<Anonymous>" 
"read.dcf" "parseNamespaceFile" "parse_ns_file" "setup_ns_exports" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"ls" "getNamespaceExports" "export_ns" "<Anonymous>" 
"readLines" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.null" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"cbind" "match_to_matrix" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!" "check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env.to.store" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"mode" "match" "%in%" "deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "fixed" "check_pattern" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"length" "new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "case.ignored" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "paste" "paste0" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"max" "substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"writeLines" "create.struc" 
"paste0" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlinePartial" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "tag2delim" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"names" "names" "$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"[<-.factor" "[<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"c" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.r" "create.empty.ps" 
"paste0" "FUN" "lapply" "create.stud.ps.rmd" "create.empty.ps" 
"sub" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"writeLines" "create.stud.ps.rmd" "create.empty.ps" 
"readLines" "create.struc" 
"!=" "recyclable" "check_pattern" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%%" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"length" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "structure" "fixed" "check_pattern" "str_locate" "str.locate.first" "str.left.of" "check_string" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_locate" "str.locate.first" "str.left.of" "check_string" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "paste" "paste0" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"grepl" "which" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"max" "substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"ifelse" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"grepl" "which" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"names" "names" "[.data.frame" "[" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"sys.call" "all.names" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"oldClass" "$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"strsplit" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"paste" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"attr<-" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"save" "save.binary.ps" "init.problem.set" "create.empty.ps" 
"writeLines" "create.stud.ps.r" "create.empty.ps" 
"vapply" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"spin" "create.stud.ps.rmd" "create.empty.ps" 
"match.arg" "match" "textConnection" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "eval" "match.arg" ".get_standard_repository_db_fields" "<Anonymous>" "<Anonymous>" 
"strsplit" "parse_deps" "load_depends" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"close" "read.dcf" "parseNamespaceFile" "parse_ns_file" "register_s3" "<Anonymous>" 
"ls" "loadedNamespaces" "match" "%in%" "get_namespace" "dev_meta" "run_pkg_hook" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"attach_ns" "<Anonymous>" 
"copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get.restore.point.options" "is.storing" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match" "%in%" "deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"==" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match_to_matrix" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"!" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste" "paste0" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "paste" "paste0" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"substring" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get.restore.point.options" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%%" "recyclable" "check_pattern" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env.to.store" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"mode" "match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"grepl" "which" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"readLines" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"strsplit" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"c" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "as.list" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"regexpr" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "as.list" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"[<-.factor" "[<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"levels" "noNA.levels" "Ops.factor" "==" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"match" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.r" "create.empty.ps" 
"grep" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"grepl" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"deparse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"str_locate" "str.locate.first" "str.left.of" "check_string" "str_trim" "str.trim" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.null" "is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.na" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"length" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%%" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"exists" "get.restore.point.options" "is.storing" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%%" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "regexpr" "do.call" "re_call" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"test.code.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.frame" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.character" "gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
">" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "data.frame" "extract.command" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"levels" "[<-.factor" "[<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"[.data.frame" "[" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"options" "getOption" "isTRUE" "parse" "as.list" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"sys.frame" "restore.point" "FUN" "lapply" "create.stud.ps.r" "create.empty.ps" 
"grep" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"strip_white" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"conditionCall" "signalCondition" "doWithOneRestart" "withOneRestart" "withRestarts" "message" "create.empty.ps" 
"readLines" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"parent.env" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"deparse" "paste0" "deparse1" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"getExportedValue" "::" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "fixed" "check_pattern" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste0" "deparse1" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "ifelse" "hint.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "create.empty.ps" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parent.frame" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"new.env" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$" "match" "%in%" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"exists" "get.restore.point.options" "is.storing" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"save" "save.binary.ps" "init.problem.set" "create.empty.ps" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.r" "create.empty.ps" 
"readLines" "split_lines" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"list" "<Anonymous>" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"regexpr" "do.call" "re_call" "str_locate" "str.locate.first" "str.right.of" "check_string" "str_trim" "str.trim" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"<Anonymous>" "parse.default" "parse" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"c" "match" "%in%" "deparse" "paste0" "deparse1" "hint.name.for.e" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"pmatch" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.list" "copy.fun" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"%%" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.arg" "str_trim" "str.trim" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"length" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate" "str.locate.first" "str.left.of" "check_string" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"formals" "match" "%in%" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"as.logical" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
":" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "paste0" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"any" "stopifnot" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"all" "match.arg" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"integer" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.null" "is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"sys.call" "all.names" "store.objects" "restore.point" "test.code.for.e" "FUN" "lapply" "sapply" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_string" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"structure" "fixed" "check_pattern" "str_locate" "str.locate.first" "str.right.of" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.block" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match" "%in%" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"match.fun" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"is.fixed" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"attr" "is.perl" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "str.trim" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.struc.code" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "add.struc.html.comment" "create.ex.struc" "FUN" "lapply" "sapply" "create.struc" 
"readLines" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"NROW" "$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "inlinePartial" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"as.data.frame.integer" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"unique.default" "unique" "simplify2array" "mapply" "renderTemplate" "tmpl" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"gsub" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "create.empty.ps" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.r" "create.empty.ps" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "create.stud.ps.rmd" "create.empty.ps" 
"vapply" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"paste" "do.call" "str_c" "spin" "create.stud.ps.rmd" "create.empty.ps" 
"writeLines" "create.stud.ps.rmd" "create.empty.ps" 
"set" "<Anonymous>" "lazyLoadDBfetch" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "mapply" "filter_chunk_end" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"is.perl" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"check_string" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"FUN" "vapply" "pmax" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"eval_lang" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"is.list" "eval" "match.arg" "sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"stdout" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"mode" "match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"levels" "as.character.factor" "as.character" "as.character" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.rename" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.rename" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.rename" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.rename" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"readLines" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.list" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"regexpr" "inlineStandAlone" "removeComments" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"levels" "noNA.levels" "Ops.factor" "==" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.hint" "eval" "eval" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "getKeyInfo" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "parse.exercise" "parse.ps.structure" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"readLines" "set.ps.stud.file" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "extract.exercise.code" "set.ps.stud.file" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.character" "gsub" "do.call" "re_call" "str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "extract.exercise.code" "set.ps.stud.file" "init.problem.set" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"environmentName" "nchar" "parent.env.to.store" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "FUN" "lapply" "init.ups" "load.ups" "get.ups" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "save.ups" "init.ups" "load.ups" "get.ups" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"lazyLoadDBfetch" "structure" "format.POSIXct" "format" "as.character.POSIXt" "as.character" "as.character" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.POSIXlt.POSIXct" "as.POSIXlt" "format.POSIXlt" "structure" "format.POSIXct" "format" "as.character.POSIXt" "as.character" "as.character" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.POSIXlt.POSIXct" "as.POSIXlt" "format.POSIXlt" "structure" "format.POSIXct" "format" "as.character.POSIXt" "as.character" "as.character" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.POSIXlt.POSIXct" "as.POSIXlt" "format.POSIXlt" "structure" "format.POSIXct" "format" "as.character.POSIXt" "as.character" "as.character" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"close.connection" "close" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "eval" "match.arg" "sink" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"list" "<Anonymous>" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"FUN" "lapply" "unlist" "unique" "simplify2array" "mapply" "filter_chunk_end" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"%in%" "structure" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"deparse" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"sys.call" "match.call" "stopifnot" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unlist" "Filter" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.list" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"sys.call" "match.call" "stopifnot" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"options" "check.problem.set" "eval" "eval" "withVisible" "source" 
"new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"names" "names" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"c" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "replace.whisker" "add.success" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "internal.check.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"store.objects" "restore.point" "internal.check.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"standardize.assign" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"store.objects" "restore.point" "replace.whisker" "add.failure" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"formatC" ".local" "FUN" "standardGeneric" "FUN" "lapply" "toJSON" "standardGeneric" "toJSON" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"match" "%in%" "deparse" "textConnection" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"Encoding" "native_encode" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unique.default" "unique" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"invisible" "flush.console" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.list" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"substr" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"rep.int" "paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"==" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parent.frame" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlinePartial" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"store.objects" "restore.point" "replace.whisker" "add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"factor" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
".deparseOpts" "deparse" "paste" "force" "as.data.frame.integer" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"regexpr" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"levels" "[<-.factor" "[<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"length" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "replace.whisker" "add.failure" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "add.failure" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"sys.call" "match.call" "stopifnot" "modifyList" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
".rs.scalar" "<Anonymous>" 
"writeChar" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"names" "match" "%in%" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"colnames<-" "FUN" "lapply" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"structure" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"Filter" "compact" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"sprintf" "paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"max" "stopifnot" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"dim" "dim" "nrow" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"sprintf" "paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "source" 
"substring" "which" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" ".local" "FUN" "standardGeneric" "FUN" "lapply" "toJSON" "standardGeneric" "toJSON" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.environment" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"dim" "dim" "NROW" "FUN" "lapply" "stats" 
"as.data.frame.vector" "as.data.frame.character" "as.data.frame" "data.frame" "FUN" "lapply" 
"print.default" "print" "print.data.frame" "print" 
"format.data.frame" "as.matrix" "print.data.frame" "print" 
"print.default" "print" "print.data.frame" "print" 
"deparse" "eval" "match.arg" "format.default" "format" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"deparse" "mode" "match" "%in%" "deparse" "paste" "as.data.frame.AsIs" "as.data.frame" "data.frame" "do.call" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" 
"as.list.default" "as.list" "data.frame" "FUN" "lapply" 
"factor" "as.data.frame.character" "as.data.frame" "data.frame" "FUN" "lapply" 
"lapply" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"nrow" "cat" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"[<-.factor" "[<-" "rbind" "rbind" "do.call" 
"store.objects" "restore.point" "FUN" "lapply" 
".deparseOpts" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "FUN" "lapply" 
"strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"[[" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"lapply" "sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"length" "length" "as.data.frame.AsIs" "as.data.frame" "data.frame" "do.call" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"format" "format.factor" "format" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"is.factor" "unique.default" "unique" "rbind" "rbind" "do.call" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "ls" "loadedNamespaces" "match" "%in%" "get_namespace" "unload" "<Anonymous>" 
".Call" "structure" "FUN" "lapply" "unlist" "md5" "changed_files" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"match" "%in%" "is_loaded" "ns_env" "run_user_hook" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "parse_only" "eval" "withCallingHandlers" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"lapply" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gregexpr" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"lapply" "unlist" "Filter" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"levels" "structure" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"process_tangle.inline" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "%in%" "deparse" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unique" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"close.connection" "close" "readLines" "check.problem.set" "eval" "eval" "withVisible" "source" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"match" "%in%" "library" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"class" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getSingleClass" "<Anonymous>" 
"as.data.frame" "data.frame" "FUN" "lapply" "stats" 
"eval" "match.arg" "sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "FUN" "lapply" "stats" 
"grep" "detect_pattern" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "unnamed_chunk" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gregexpr" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "[.factor" "[" "rep.int" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unique" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"isFALSE" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.list" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"close" "source" 
"try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"match" "[<-.factor" "[<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"attr" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"==" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"unique" "simplify2array" "sapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"match" "%in%" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"solve.default" "solve" 
"solve.default" "solve" 
"pmatch" ".deparseOpts" "deparse" "eval" "match.arg" "sink" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gregexpr" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match.fun" "lapply" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"+" "chunk_counter" "paste" "unnamed_chunk" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"make.names" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"eval" "match.arg" "sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unique" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "close.txtProgressBar" "close" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.rename" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.rename" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.info" "srcfilecopy" "source" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.var" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"store.objects" "restore.point" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"options" "getOption" "isTRUE" "parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
".row_names_info" "$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"length" "length" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.data.frame.numeric" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "removeComments" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "save.ups" "check.problem.set" "eval" "eval" "withVisible" "source" 
"length" "tryCatch" ".rs.getSingleClass" "<Anonymous>" 
"format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"gzfile" "save" "save.ups" "hint" 
"grep" "source" 
"gsub" ".rs.getSignature" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"<Anonymous>" 
"!=" "native_encode" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "%in%" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"attr" "is.fixed" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "check_string" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"[.factor" "[" "rep.int" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file" "writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"getNamespace" "asNamespace" "getExportedValue" "::" "source" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"unique" "simplify2array" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "delimit" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
".deparseOpts" "deparse" "paste" "force" "as.data.frame.integer" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.list.default" "as.list" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"-" "exists" "get.restore.point.options" "is.storing" "store.objects" "restore.point" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"sys.call" "all.names" "store.objects" "restore.point" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "describe.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "is.same" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"unique" "setdiff" "copy.into.env" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"FUN" "standardGeneric" "FUN" "lapply" "toJSON" "standardGeneric" "toJSON" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"stdout" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"lapply" "unlist" "unique" "simplify2array" "sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "stats" 
"match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "FUN" "lapply" "stats" 
"rbind" "rbind" "do.call" "stats" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "mapply" "filter_chunk_end" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"merge_list" "merge" "<Anonymous>" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"recyclable" "check_pattern" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"vapply" "recyclable" "check_pattern" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.list" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"make.unique" "make.names" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"any" ".deparseOpts" "deparse" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".Call" "flush.console" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.info" "srcfilecopy" "source" 
"as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"strsplit" "FUN" "lapply" "tmpl" "whisker.render" "replace.whisker" "add.success" "holds.true" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"NextMethod" "[.POSIXct" "[" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"store.objects" "restore.point" "describe.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tryCatch" "try" "store.objects" "restore.point" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"ifelse" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "describe.call" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlinePartial" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"save" "save.ups" "check.problem.set" "eval" "eval" "withVisible" "source" 
"%in%" "deparse" "mode" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"as.name" "getNamespace" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"paste0" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"formatC" ".local" "FUN" "standardGeneric" "FUN" "lapply" "toJSON" "standardGeneric" "toJSON" "log.hint" "hint" 
"mode" "match" "%in%" "deparse" "eval" "match.arg" "match" "textConnection" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "mapply" "filter_chunk_end" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"list" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "group_pattern" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"flush.console" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
">" "FUN" "lapply" "unlist" "Filter" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"eval" "eval" "match.arg" "sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "%in%" "structure" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"length" "length" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"recyclable" "check_pattern" "str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "get.ups" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "is.same" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "is.same" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "removeComments" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.character" "gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"any" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.integer" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
".Call" ".rs.enqueClientEvent" ".rs.recordTraceback" "<Anonymous>" "stop" "check.problem.set" "eval" "eval" "withVisible" "source" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "mapply" "filter_chunk_end" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"parent.frame" "get" "formals" "match" "%in%" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"check_string" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.list.default" "as.list" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"names" "names" "as.data.frame.vector" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gregexpr" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "describe.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "describe.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "removeComments" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlineStandAlone" "removeComments" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"save" "save.ups" "check.problem.set" "eval" "eval" "withVisible" "source" 
"sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"match.arg" "match" "textConnection" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"unique.default" "unique" "simplify2array" "sapply" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"%in%" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"list" "vapply" "recyclable" "check_pattern" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"lapply" "unlist" "Filter" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"names" "names" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"$" "check_string" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame.vector" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"readLines" "source" 
"file.info" "srcfilecopy" "source" 
"cat" "source" 
"store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"-" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"renderTemplate" "tmpl" "whisker.render" "replace.whisker" "add.success" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"$<-.data.frame" "$<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "internal.check.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "describe.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "tag2delim" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tryCatch" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "renderText" "gsub" "whisker.escape" "render" "<Anonymous>" "mapply" "renderTemplate" "tmpl" "whisker.render" "replace.whisker" "add.failure" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"any" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste" ".rs.scalar" "FUN" "lapply" ".rs.recordTraceback" "<Anonymous>" "stop" "check.problem.set" "eval" "eval" "withVisible" "source" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"FUN" "lapply" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"save" "save.ups" "hint" 
"strtrim" "maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "eval" "match.arg" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"eval" "FUN" "lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "check_string" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"attr" "is.perl" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"vapply" "recyclable" "check_pattern" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"attr" "is.fixed" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match.arg" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".row_names_info" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unique" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"any" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame.vector" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.info" "srcfilecopy" "source" 
"is.na" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.list" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "internal.check.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
">" "new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "internal.check.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.list.default" "as.list" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"NROW" "lm.fit" "eval" "eval" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"unique" "simplify2array" "sapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "save.ups" "check.problem.set" "eval" "eval" "withVisible" "source" 
"format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"lapply" "unlist" "unique" "simplify2array" "sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"format.default" "format" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"==" "<Anonymous>" "paste" "unnamed_chunk" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"levels" "[.factor" "[" "rep.int" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"Filter" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"structure" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.or.init.problem.set" "check.problem.set" "eval" "eval" "withVisible" "source" 
"substring" "which" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"attr" "is.perl" "re_call" "str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "inlinePartial" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"sub" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"c" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "internal.check.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"[<-.factor" "[<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"match.arg" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"as.name" "eval" "FUN" "lapply" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"unlist" "simplify2array" "sapply" "prettyNum" "format.default" "format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"as.name" "eval" "FUN" "lapply" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "hint.for.call" "hint.for.assign" "eval" "eval" "eval" "eval" "withVisible" "evalVis" "capture.output" "paste0" "log.hint" "hint" 
"paste" "paste0" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"paste0" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"paste" "paste0" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"match.fun" "lapply" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"as.list" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cat" "print.summary.lm" "print" 
"readLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"get" "formals" "match" "%in%" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"vapply" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"$" "check_string" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "[.factor" "[" "rep.int" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"sys.parent" "sys.call" "match.call" "stopifnot" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"substring" "which" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"solve" "ols" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"[<-" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"unlist" "unique" "simplify2array" "sapply" "internal.check.call" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"identical" "restore.point" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste0" "deparse1" "FUN" "lapply" "sapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "FUN" "lapply" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "tag2delim" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.assign" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.integer" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"close.connection" "close" "save" "save.ups" "give.award" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"match.call.object" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tryCatch" "try" "store.objects" "restore.point" "replace.whisker" "add.failure" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"stop" "check.problem.set" "eval" "eval" "withVisible" "source" 
"is.scalarOrVector" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"exists" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"format" "format.fun" "paste" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"structure" "object.size" "<Anonymous>" 
"factor" "as.data.frame.character" "as.data.frame" "data.frame" "FUN" "lapply" "stats" 
"levels" "rbind" "rbind" "do.call" "stats" 
"grep" "detect_pattern" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "parse_only" "eval" "withCallingHandlers" "parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"stopifnot" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"Filter" "compact" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"max" "recyclable" "check_pattern" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "check_string" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".deparseOpts" "deparse" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"length" "length" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "[.factor" "[" "rep.int" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"str_length" "pmax" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"options" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"all.names" "store.objects" "restore.point" "import.stud.env.var" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
".rs.scalar" "<Anonymous>" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unique" "factor" "as.factor" "split.default" "split" "unname" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gregexpr" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"strip_block" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"eval_lang" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "%in%" "deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".deparseOpts" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"character" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "%in%" "deparse" "mode" "source" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"data.frame" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.list" "data.frame" "sim.data" "eval" "with.random.seed" "replace.whisker" "add.success" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.data.frame.vector" "as.data.frame.character" "as.data.frame" "data.frame" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"file" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"readLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"is.data.frame" "colnames<-" "FUN" "lapply" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"recyclable" "check_pattern" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"deparse" "eval" "match.arg" "sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"stopifnot" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match.fun" "vapply" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.list" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"stdout" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unique" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"store.objects" "restore.point" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "get.ups" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"!" "get.restore.point.options" "store.objects" "restore.point" "sim.data" "eval" "with.random.seed" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"internal.check.call" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.character" "gsub" ".local" "FUN" "standardGeneric" "FUN" "lapply" "toJSON" "standardGeneric" "toJSON" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "compare.call.args" "FUN" "lapply" "hint.for.call" "eval" "eval" "hint" 
"hint" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.character" "factor" "as.factor" "split.default" "split" "unname" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"vapply" "recyclable" "check_pattern" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"-" "FUN" "lapply" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"check_string" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "[.factor" "[" "rep.int" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"is.na<-" "str_length" "pmax" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"is.na<-" "str_length" "pmax" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "trySrcLines" "source" 
"is.expression" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"all" "stopifnot" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "sim.data" "eval" "with.random.seed" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"regexpr" "inlineStandAlone" "removeComments" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"NextMethod" "[.POSIXct" "[" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"print.function" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"parse" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "match.call.object" "compare.call.args" "FUN" "lapply" "hint.for.call" "eval" "eval" "hint" 
"file" "log.hint" "hint" 
".deparseOpts" "deparse" "textConnection" "capture.output" "<Anonymous>" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"check_string" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"vapply" "recyclable" "check_pattern" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"factor" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"group_pattern" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"sub" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "delimit" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "removeComments" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "internal.check.call" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"toJSON" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "sim.data" "eval" "with.random.seed" "eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "replace.whisker" "add.failure" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
".rs.getSingleClass" "<Anonymous>" 
".External" "png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "mapply" "filter_chunk_end" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"gsub" "check_string" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"all" "recyclable" "check_pattern" "str_replace_all" "str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"merge_list" "<Anonymous>" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"is.na<-.default" "is.na<-" "str_length" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"length" "FUN" "lapply" "unlist" "Filter" "str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"close" "writeLines" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.info" "srcfilecopy" "source" 
"readLines" "check.problem.set" "eval" "eval" "withVisible" "source" 
"data.frame" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"data.frame" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"tryCatch" ".rs.valueDescription" "<Anonymous>" 
"grep" "detect_pattern" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"<Anonymous>" "mapply" "filter_chunk_end" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"case.ignored" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"str_trim" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"parse_params" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"cat" "<Anonymous>" "setTxtProgressBar" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"grepl" "group_pattern" "parse_chunk" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"match" "%in%" "structure" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"check_string" "str_length" "pmax" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"NextMethod" "[.factor" "[" "rep.int" "paste" "FUN" "vapply" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"levels.default" "levels" "structure" "rep.factor" "rep" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"print_knitlog" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.rename" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"file.info" "srcfilecopy" "source" 
"substring" "which" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.character" "pmatch" ".deparseOpts" "deparse" "data.frame" "sim.data" "eval" "with.random.seed" "eval" "eval" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "get.user" "get.ups" "save.ups" "give.award" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.data.frame" "data.frame" "sim.data" "sim.and.est" "eval" "with.random.seed" "eval" "eval" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "paste0" "assign" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"deparse" "textConnection" "capture.output" ".rs.getSignature" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"as.data.frame" "data.frame" "FUN" "lapply" "stats" 
"as.list" "copy.fun" "store.objects" "restore.point" "FUN" "lapply" "stats" 
".deparseOpts" "deparse" "eval" "match.arg" "format.default" "format" "format.factor" "format" "format.data.frame" "as.matrix" "print.data.frame" "print" "stats" 
"mode" "substr" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"match" "%in%" "structure" "object.size" "<Anonymous>" 
"print.default" "print" "print.data.frame" "print" 
"grepl" "<Anonymous>" "<Anonymous>" 
"close" "read.dcf" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"new.env" "srcfilecopy" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"readLines" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "<Anonymous>" 
"get" "getNamespaceInfo" "addNamespaceDynLibs" "load_dll" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "<Anonymous>" 
"FUN" "lapply" "unlist" "importIntoEnv" "export_ns" "<Anonymous>" 
"pmatch" ".deparseOpts" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "sim.and.est" 
"data.frame" "do.call" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"names" "names" "format.data.frame" "as.matrix" "print.data.frame" "print" 
"any" ".deparseOpts" "deparse" "data.frame" "sim.data" 
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"dim" "nrow" "lm.fit" "coef" "sim.and.est" 
".External" "dev.off" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "inherits" "<Anonymous>" "set_html_dev" "render_markdown" "do.call" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.character" "factor" "as.factor" "split.default" "split" "unname" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"unlist" "Filter" "compact" "do.call" "re_call" "str_locate_all" "parse_inline" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"structure" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"process_tangle.inline" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"deparse" "mode" "match" "%in%" "deparse" "as.data.frame.character" "as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"str_c" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
":" "stopifnot" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"parent.frame" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"is.na<-" "str_length" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"as.data.frame" "data.frame" "str_dup" "str_pad" "paste" "label_code" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
"eval_lang" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "process_tangle.block" "process_tangle" "withCallingHandlers" "process_file" "knit" "<Anonymous>" ".Call" "op" "eval" "eval" "withVisible" "evalVis" "capture.output" "<Anonymous>" 
".makeMessage" "message" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"mode" "match" "%in%" "deparse" "paste" "force" "as.data.frame.integer" "as.data.frame" "data.frame" "extract.command" "extract.rmd.exercise.code" "FUN" "lapply" "sapply" "check.problem.set" "eval" "eval" "withVisible" "source" 
"get" "get.ex" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"regexpr" "inlineStandAlone" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.function" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"gsub" "getKeyInfo" "parseTemplate" "whisker.render" "replace.whisker" "add.success" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "sim.data" "sim.and.est" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"paste" "delimit" "inlineStandAlone" "replace_delim_tags" "parseTemplate" "whisker.render" "replace.whisker" "add.failure" "check.call" "eval" "eval" "check.exercise" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "check.problem.set" "eval" "eval" "withVisible" "source" 
"pmax" "formatC" ".local" "FUN" "standardGeneric" "FUN" "lapply" "toJSON" "standardGeneric" "toJSON" "log.exercise" "check.problem.set" "eval" "eval" "withVisible" "source" 
"as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "sim.and.est" 
